swagger: '2.0'
info:
  description: CardMaker System -- CS509 GROUP PROJECT API
  version: "1.0.0"
  title: CardMaker API
  # Team developer contact info 
  contact:
    email: zlin5@wpi.edu #eliu2@wpi.edu, hhong2@wpi.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
#- name: admins
#  description: Secured Admin-only calls

- name: card
  description: Operations work on card entity
- name: visualElement
  description: Operations that not involving whole card
- name: adder
  description: Operations can insert data into DB
- name: editor
  description: Operations can change or delet existing data in DB
- name: reader
  description: Operations can only access data from DB and not modify any data

paths:
  /createCard:
    post:
      tags:
      - card
      - adder
      summary: create a new card
      operationId: createCard
      description: Create a new card by given event type and recipient
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Card
        description: check the existence, if none, create a new card
        schema:
          $ref: '#/definitions/Card'
      responses:
        200:
          description: new card created
        400:
          description: invalid input of event type of recipient
        409:
          description: card already exists
  /deleteCard:
    post:
      tags:
      - editor
      - card
      summary: request to delete a card
      operationId: requestDeleteCard
      description: Requests to delete a card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Card
        description: check existence, if found, delete it.
        schema:
          $ref: '#/definitions/Card'
      responses:
        200:
          description: card deleted
        400:
          description: invalid event type or invalid recipient
        404:
          description: card not exists
  /duplicateCard:
    post:
      tags:
      - editor
      - card
      summary: request to duplicate a card
      operationId: requestDuplicateCard
      description: Requests to duplicate a card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DuplicateCardRequest
        description: Request to duplicate a card
        schema:
          $ref: '#/definitions/DuplicateCard'
      responses:
        200:
          description: card duplicated
        400:
          description: invalid event type or invalid recipient
        404:
          description: origin card not found
        409:
          description: target card already exists
  /cardList:
    get:
      tags:
      - card
      - reader
      summary: request to get list of all cards
      operationId: getCardList
      description: Requests to get card list
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: card list got
          schema:
            type: array
            items:
              $ref: "#/definitions/Card"
        400:
          description: invalid request
        500:
          description: server error
  # /getCard:
  #   get:
  #     tags:
  #     - reader
  #     - card
  #     summary: request to get a card
  #     operationId: getCard
  #     description: Requests to get a card
  #     consumes:
  #     - application/json
  #     produces:
  #     - application/json
  #     parameters:
  #     - in: body
  #       name: Card
  #       description: Request to get a card
  #       schema:
  #         $ref: '#/definitions/Card'
  #     responses:
  #       200:
  #         description: card got
  #       400:
  #         description: invalid request
  #       500:
  #         description: server error
  
  /addTextItem:
    post:
      summary: Add Text Visual Element 
      description: adding new text element to given card
      tags:
        - adder
        - visualElement
      parameters:
      - in: body
        name: TextInit
        description: parameter for new text Item init
        schema:
          $ref: '#/definitions/TextInit'
      responses:
        200:
          description: OK
        404:
          description: card not found
        400:
          description: fail to create element
  
          
  /addImageItem:
    post:
      summary: Add Image Visual Element 
      description: adding new Image element to given card
      consumes:
      - application/json
      produces:
      - application/json
      tags:
        - adder
        - visualElement
      parameters:
      - in: body
        name: ImageInit
        description: parameter for new Image Item init
        schema:
          $ref: '#/definitions/ImageInit'
      responses:
        200:
          description: OK
        404:
          description: card not found
        400:
          description: fail to create element
  
  /deleteVisualElement:
    post:
      summary: Delete Visual Element
      description: delete certain visual element
      consumes:
      - application/json
      produces:
      - application/json
      tags:
        - editor
        - visualElement
      parameters:
      - in: body
        name: Element
        description: the element information
        schema:
          $ref: '#/definitions/Element'
      responses:
        200:
          description: sucesseful delete
        400:
          description: fail to delete
        404:
          description: Card or element is not exist.
  # /editVisualElement:
  #   post:
  #     summary: Edit Visual Element
  #     description: Edit certain visual element
  #     consumes:
  #     - application/json
  #     produces:
  #     - application/json
  #     tags:
  #       - editor
  #       - visualElement
  #     parameters:
  #     - in: body
  #       name: Element
  #       description: the element information
  #       schema:
  #         $ref: '#/definitions/EditElement'
  #     responses:
  #       200:
  #         description: sucesseful delete
  #       400:
  #         description: fail to delete
  #       404:
  #         description: Card or element is not exist.
  /editTextElement:
    post:
      summary: Edit Text Element
      description: Edit certain Text element
      consumes:
      - application/json
      produces:
      - application/json
      tags:
        - editor
        - visualElement
      parameters:
      - in: body
        name: 
          TextElement
        description: the element information
        schema:
          $ref: '#/definitions/EditTextElement'
      responses:
        200:
          description: sucesseful delete
        400:
          description: fail to delete
        404:
          description: Card or element is not exist.
  /editImageElement:
    post:
      summary: Edit Image Element
      description: Edit certain Image element
      consumes:
      - application/json
      produces:
      - application/json
      tags:
        - editor
        - visualElement
      parameters:
      - in: body
        name: ImageElement
        description: the element information
        schema:
          $ref: '#/definitions/EditImageElement'
      responses:
        200:
          description: sucesseful delete
        400:
          description: fail to delete
        404:
          description: Card or element is not exist.
          
  /elementList:
    get:
      tags:
      - reader
      - visualElement
      description: get all element on given card
      summary: get all element on given card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Card
        description: given Card
        schema:
          $ref: '#/definitions/Card'
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ElementList"
        400:
          description: fail to load element list
        404:
          description: Card not exist
          
  /displayCard:
    post:
      tags:
      - reader
      description: Display the given card
      summary: Display
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: Card
        description: given Card
        schema:
          $ref: '#/definitions/Card'
      responses:
        200:
          description: OK
        400:
          description: fail to load Card
        404:
          description: Card not exist
          
  /imageList:
    get:
      tags:
      - reader
      description: get all Image In S3 bucket
      summary: get Image list from S3 bucket
      produces:
      - application/json
      parameters: []
      responses:
        200: 
          description: OK
          schema:
            type: array
            items:
              type: string
        400:
          description: fail to get images

    
definitions:
  Card:
    type: object
    required:
    - eventtype
    - recipient
    properties:
      eventtype:
        type: string
      recipient:
        type: string
      orientation:
        type: boolean

  DuplicateCard:
    type: object
    required:
    - card
    - newrecipient
    properties:
      card:
        $ref: '#/definitions/Card'
      newrecipient:
        type: string

  
  TextInit:
    type: object
    required:
    - position
    - text
    - page
    - card
    properties:
      card:
        $ref: '#/definitions/Card'
      position:
        $ref: '#/definitions/Position'
      text:
        type: string
      page:
        type: integer
      font:
        type: string
  ImageInit:
    type: object
    required:
    - position
    - imageId
    - page
    - card
    properties:
      card:
        $ref: '#/definitions/Card'
      position:
        $ref: '#/definitions/Position'
      imageId:
        type: integer
        default: -1
      page:
        type: integer
      url:
        type: string
        
  Element:
    type: object
    required:
      - card
      - eid
    properties:
      card:
        $ref: '#/definitions/Card'
      eid: 
        type: integer
  ElementList:
    type: object
    properties:
      images:
        type: array
        items:
          $ref: '#/definitions/ImageInit'
      texts:
        type: array
        items:
          $ref: '#/definitions/TextInit'
  EditTextElement:
    type: object
    required:
      - element
    properties:
      position:
        $ref: '#/definitions/Position'
      element:
        $ref: '#/definitions/Element'
      font:
        type: string
      text:
        type: string
        
        
  EditImageElement:
    type: object
    required:
      - element
    properties:
      position:
        $ref: '#/definitions/Position'
      element:
        $ref: '#/definitions/Element'
      url:
        type: string
      imageID:
        type: integer
  Position:
    type: object
    required:
      - left
      - top
      - width
      - height
    properties:
      left :
        type: integer
      top:
        type: integer
      width:
        type: integer
      height:
        type: integer
        


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /heineman/Calculator/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
basePath: /NorwichTeam/CardMaker_API/1.0.0